{"version":3,"sources":["webpack:///./src/app/main/dashboards/projects/projects.component.html","webpack:///./src/app/main/dashboards/projects/projects.component.scss","webpack:///./src/app/main/dashboards/projects/projects.component.ts","webpack:///./src/app/main/dashboards/projects/projects.module.ts","webpack:///./src/app/main/dashboards/projects/projects.service.ts"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["module.exports = \"<div id=\\\"dashboard-project\\\" class=\\\"page-layout simple right-sidebar\\\" fxLayout=\\\"row\\\">\\n\\n  <!-- CENTER -->\\n  <div class=\\\"center\\\">\\n\\n      <!-- HEADER -->\\n      <div class=\\\"header p-24 pb-0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-xs=\\\"column\\\" fxLayoutAlign.gt-xs=\\\"center start\\\">\\n                <div class=\\\"white-fg\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon class=\\\" s-18\\\">home</mat-icon>\\n                    <mat-icon class=\\\"s-16\\\">chevron_right</mat-icon>\\n                    <span class=\\\"\\\">Projects</span>\\n                    <mat-icon class=\\\" s-16\\\">chevron_right</mat-icon>\\n                    <span class=\\\"\\\">Home</span>\\n                </div>\\n                <div class=\\\"h2 mt-16\\\">{{selectedProject.name}}</div>\\n            </div>\\n    \\n            <a *ngIf=\\\"projectsData.allowedToViewRef\\\" mat-raised-button class=\\\"reference-button mat-white-bg mt-16 mt-sm-0\\\" (click)=\\\"refranceSelected(projectsData.referance)\\\"\\n               >\\n                <mat-icon class=\\\"mr-8\\\">link</mat-icon>\\n                <span>Reference</span>\\n            </a>\\n          </div>\\n\\n          <div fxLayout=\\\"row\\\">\\n\\n              <div class=\\\"selected-project\\\">{{selectedProject.name}}</div>\\n\\n              <button mat-icon-button class=\\\"project-selector\\\" [matMenuTriggerFor]=\\\"projectsMenu\\\"\\n                      aria-label=\\\"Select project\\\">\\n                  <mat-icon>more_horiz</mat-icon>\\n              </button>\\n\\n              <mat-menu #projectsMenu=\\\"matMenu\\\">\\n                  <button mat-menu-item *ngFor=\\\"let project of listOfProjects\\\" (click)=\\\"selectedProjectFromList(project)\\\">\\n                      <span>{{project.name}}</span>\\n                  </button>\\n              </mat-menu>\\n          </div>\\n      </div>\\n      <!-- / HEADER -->\\n \\n      <!-- CONTENT -->\\n      <div class=\\\"content\\\">\\n\\n          <mat-tab-group dynamicHeight>\\n            <mat-tab label=\\\"Project Summary\\\">\\n                <!-- WIDGET GROUP -->\\n                <div class=\\\"widget-group grey-100-bg\\\" fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" *albumIfOnDom\\n                     [@animateStagger]=\\\"{value:'50'}\\\">\\n\\n                     <div class=\\\"page-layout simple fullwidth\\\">\\n\\n                      <!-- summary-header -->\\n                      <div class=\\\"summary-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                  \\n                          <div class=\\\"hero-text\\\" fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"center center\\\" fxFlex>\\n                  \\n                              <div class=\\\"h1\\\">{{projectsData.Description.title}}!</div>\\n                              <div class=\\\"h3\\\">\\n                                {{projectsData.location.State}}\\n                                <mat-icon class=\\\"s-16 ml-4\\\">location_on</mat-icon>\\n                             </div>\\n                              <div class=\\\"h3\\\">\\n                                 {{projectsData.Description.subTitle}}!\\n                              </div>\\n                  \\n                          </div>\\n                  \\n                      </div>\\n                      <!-- / summary-header -->\\n                  \\n                      <!-- CONTENT -->\\n                      <div class=\\\"content\\\" fxLayout=\\\"column\\\">\\n    \\n                          <div class=\\\"price-tables\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n                              <div class=\\\"price-table mat-elevation-z2\\\" fxLayout=\\\"column\\\">\\n                                  <div class=\\\"px-16 border-bottom p-16\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                      <div class=\\\"h3\\\"  fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">{{projectsData.widget6.title}}</div>\\n                                      <mat-form-field  fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                                          <mat-select class=\\\"simplified\\\" [(ngModel)]=\\\"widget6.currentProject\\\" aria-label=\\\"Change project\\\">\\n                                              <mat-option *ngFor=\\\"let project of projectsData.widget6.projects | keys\\\"\\n                                                          [value]=\\\"project.key\\\">\\n                                                  {{project.value}}\\n                                              </mat-option>\\n                                          </mat-select>\\n                                      </mat-form-field>\\n                                  </div>\\n                                  <div class=\\\"h-400\\\">\\n                                      <ngx-charts-pie-chart\\n                                          *albumIfOnDom\\n                                          [scheme]=\\\"widget6.scheme\\\"\\n                                          [results]=\\\"projectsData.widget6.mainChart[widget6.currentProject]\\\"\\n                                          [legend]=\\\"widget6.showLegend\\\"\\n                                          [explodeSlices]=\\\"widget6.explodeSlices\\\"\\n                                          [labels]=\\\"widget6.labels\\\"\\n                                          [doughnut]=\\\"widget6.doughnut\\\"\\n                                          [gradient]=\\\"widget6.gradient\\\"\\n                                          (select)=\\\"widget6.onSelect($event)\\\">\\n                                      </ngx-charts-pie-chart>\\n                                  </div>\\n                              </div>\\n                  \\n                             \\n                  \\n                          </div>\\n                  \\n                          <div class=\\\"faq\\\" fxLayout=\\\"row wrap\\\">\\n                  \\n                              <div class=\\\"title\\\" fxFlex=\\\"100\\\">About Projects</div>\\n                  \\n                              <div class=\\\"item\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" *ngFor=\\\"let descriptionByProj of projectsData.Description.descriptionByProj\\\">\\n                                  <div class=\\\"question\\\">{{descriptionByProj.title}}</div>\\n                                  <div class=\\\"answer\\\">\\n                                     {{descriptionByProj.desc}}.\\n                                  </div>\\n                              </div>\\n                  \\n                          </div>\\n                  \\n                      </div>\\n                  \\n                  </div>\\n                  \\n                  \\n                </div>\\n                <!-- / WIDGET GROUP -->\\n\\n            </mat-tab>\\n              <mat-tab label=\\\"Tasks Details\\\">\\n\\n                  <div class=\\\"widget-group grey-100-bg p-12\\\" fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" *albumIfOnDom\\n                       [@animateStagger]=\\\"{value:'50'}\\\">\\n                             <!-- WIDGET 2 -->\\n      <album-widget [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" class=\\\"widget\\\" fxLayout=\\\"column\\\"\\n      fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex.gt-md=\\\"33\\\">\\n  \\n          <!-- Front -->\\n          <div class=\\\"album-widget-front mat-white-bg mat-elevation-z2\\\">\\n          <div class=\\\"pl-16 pr-8 py-16 h-52\\\" fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"space-between center\\\">\\n          <mat-form-field>\\n              <mat-select class=\\\"simplified font-size-16\\\"\\n                          [(ngModel)]=\\\"projectsData.widget1.currentRange\\\"\\n                          aria-label=\\\"Change range\\\">\\n                  <mat-option *ngFor=\\\"let range of projectsData.widget1.projects | keys\\\"\\n                              [value]=\\\"range.key\\\">\\n                      {{range.value}}\\n                  </mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n          <button mat-icon-button albumWidgetToggle aria-label=\\\"more\\\">\\n              <mat-icon>more_vert</mat-icon>\\n          </button>\\n          </div>\\n  \\n          <div class=\\\"pt-8 pb-32\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n          <div class=\\\"light-blue-fg font-size-72 line-height-72\\\">\\n              {{projectsData.widget1.data.count[projectsData.widget1.currentRange]}}\\n          </div>\\n          <div class=\\\"h3 secondary-text font-weight-500\\\">{{projectsData.widget1.data.label}}\\n          </div>\\n          </div>\\n          </div>\\n          <!-- / Front -->\\n  \\n          <!-- Back -->\\n          <div class=\\\"album-widget-back p-16 pt-32 mat-white-bg mat-elevation-z2\\\">\\n          <button mat-icon-button albumWidgetToggle class=\\\"album-widget-flip-button\\\"\\n              aria-label=\\\"Flip widget\\\">\\n          <mat-icon class=\\\"s-16\\\">close</mat-icon>\\n          </button>\\n  \\n          <div>\\n          {{projectsData.widget1.detail}}\\n          </div>\\n          </div>\\n          <!-- / Back -->\\n  \\n          </album-widget>\\n          <!-- / WIDGET 2 -->\\n    <!-- WIDGET 1 -->\\n    <album-widget [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" class=\\\"widget\\\" fxLayout=\\\"column\\\"\\n    fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex.gt-md=\\\"34\\\">\\n\\n        <!-- Front -->\\n        <div class=\\\"album-widget-front mat-white-bg mat-elevation-z2\\\">\\n        <div class=\\\"pl-16 pr-8 py-16 h-52\\\" fxLayout=\\\"row\\\"\\n            fxLayoutAlign=\\\"space-between center\\\">\\n  \\n        </div>\\n\\n        <div class=\\\"pt-8 pb-32\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div class=\\\"blue-grey-fg font-size-72 line-height-72\\\">\\n            {{projectsData.widget2.data.count}}\\n        </div>\\n        <div class=\\\"h3 secondary-text font-weight-500\\\">{{projectsData.widget2.data.label}}\\n        </div>\\n        </div>\\n        <div class=\\\"py-8 mh-16 border-top\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <div class=\\\"py-8 border-right\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n                     fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                    <span class=\\\"mat-display-1 mb-0\\\">\\n                            {{projectsData.widget2.data.enhancements}}\\n                    </span>\\n                    <span class=\\\"h4\\\">{{projectsData.widget2.data.enhancementslabel}}</span>\\n                </div>\\n\\n                <div class=\\\"py-8\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\"\\n                     fxFlex.gt-sm=\\\"50\\\">\\n                    <span class=\\\"mat-display-1 mb-0\\\">\\n                            {{projectsData.widget2.data.defects}}\\n                    </span>\\n                    <span class=\\\"h4\\\">{{projectsData.widget2.data.defectslabel}}</span>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- / Front -->\\n\\n        </album-widget>\\n        <!-- / WIDGET 1 -->\\n\\n     <!-- WIDGET 3 -->\\n     <album-widget [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" class=\\\"widget\\\" fxLayout=\\\"column\\\"\\n     fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex.gt-md=\\\"33\\\">\\n \\n         <!-- Front -->\\n         <div class=\\\"album-widget-front mat-white-bg mat-elevation-z2\\\">\\n         <div class=\\\"pl-16 pr-8 py-16 h-52\\\" fxLayout=\\\"row\\\"\\n             fxLayoutAlign=\\\"space-between center\\\">\\n         <mat-form-field>\\n             <mat-select class=\\\"simplified font-size-16\\\"\\n                         [(ngModel)]=\\\"projectsData.widget3.currentRange\\\"\\n                         aria-label=\\\"Change range\\\">\\n                 <mat-option *ngFor=\\\"let range of projectsData.widget3.projects | keys\\\"\\n                             [value]=\\\"range.key\\\">\\n                     {{range.value}}\\n                 </mat-option>\\n             </mat-select>\\n         </mat-form-field>\\n         </div>\\n \\n         <div class=\\\"pt-8 pb-32\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n         <div class=\\\"orange-fg font-size-72 line-height-72\\\">\\n             {{projectsData.widget3.data.count[projectsData.widget3.currentRange]}}\\n         </div>\\n         <div class=\\\"h3 secondary-text font-weight-500\\\">{{projectsData.widget3.data.label}}\\n         </div>\\n         </div>\\n         </div>\\n         <!-- / Front -->\\n         </album-widget>\\n         <!-- / WIDGET 3 -->\\n      <!-- WIDGET 5 -->\\n<album-widget [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n      class=\\\"widget widget5\\\">\\n\\n            <!-- Front -->\\n            <div class=\\\"album-widget-front mat-white-bg mat-elevation-z2\\\">\\n\\n            <div class=\\\"px-16 border-bottom\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n                <div fxFlex class=\\\"py-16 h3\\\">Application Screen Shots</div>\\n            </div>\\n            <div class=\\\"p-24\\\" albumPerfectScrollbar>\\n                    <div *ngIf=\\\"!projectsData.permissionToViewImage\\\" class=\\\"py-16 h3\\\">No Permissions to display original content, below are samples.</div>\\n                    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\">\\n                        <div *ngFor=\\\"let image of projectsData.images\\\">\\n                            <div *ngIf=\\\"projectsData.images.length > 0\\\"\\n                                    class=\\\"product-image\\\" fxlayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                                <img class=\\\"media\\\" [src]=\\\"image.url\\\">\\n                            </div>\\n                        </div>\\n                </div>\\n                </div>\\n            </div>\\n            <!-- / Front -->\\n\\n</album-widget>\\n<!-- / WIDGET 5 -->\\n                  </div>\\n                  <!-- / WIDGET GROUP -->\\n\\n              </mat-tab>\\n              <mat-tab label=\\\"Team Members\\\">\\n   <!-- WIDGET GROUP -->\\n   <div class=\\\"widget-group grey-100-bg\\\" fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" *albumIfOnDom\\n   [@animateStagger]=\\\"{value:'50'}\\\">\\n\\n  <!-- WIDGET 11 -->\\n  <album-widget [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" class=\\\"widget\\\" fxLayout=\\\"row\\\"\\n               fxFlex=\\\"100\\\">\\n\\n      <!-- Front -->\\n      <div class=\\\"album-widget-front mat-white-bg mat-elevation-z2\\\">\\n\\n          <div class=\\\"p-24 mb-8 border-bottom\\\" fxLayout=\\\"row\\\"\\n               fxLayoutAlign=\\\"space-between center\\\">\\n              <div class=\\\"h2\\\">{{projectsData.teamMembers.title}}</div>\\n              <div class=\\\"text-boxed red-bg white-fg m-0\\\">\\n                  {{projectsData.teamMembers.table.rows.length}}\\n                  members\\n              </div>\\n          </div>\\n\\n          <mat-table #table [dataSource]=\\\"teamMembers.dataSource\\\">\\n\\n              <!-- Avatar Column -->\\n              <ng-container matColumnDef=\\\"avatar\\\">\\n                  <mat-header-cell fxFlex=\\\"96px\\\" *matHeaderCellDef></mat-header-cell>\\n                  <mat-cell fxFlex=\\\"96px\\\" *matCellDef=\\\"let contact\\\">\\n                      <img class=\\\"avatar\\\" *ngIf=\\\"contact.avatar\\\" [alt]=\\\"contact.name\\\"\\n                           [src]=\\\"contact.avatar\\\"/>\\n                  </mat-cell>\\n              </ng-container>\\n\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                  <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md> Name</mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-md>\\n                      <p class=\\\"text-truncate\\\">...\\n                         </p>\\n                  </mat-cell>\\n              </ng-container>\\n\\n              <!-- Role Column -->\\n              <ng-container matColumnDef=\\\"role\\\">\\n                  <mat-header-cell *matHeaderCellDef>Role\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let contact\\\">\\n                      <p class=\\\"position text-truncate font-weight-600\\\">\\n                          {{contact.role}}\\n                      </p>\\n                  </mat-cell>\\n              </ng-container>\\n\\n              <!-- Office Column -->\\n              <ng-container matColumnDef=\\\"office\\\">\\n                  <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md>Office\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-md>\\n                      <p class=\\\"office text-truncate\\\">\\n                          {{contact.office}}\\n                      </p>\\n                  </mat-cell>\\n              </ng-container>\\n\\n                <!-- Active Column -->\\n                <ng-container matColumnDef=\\\"status\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Current Status at Project</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let contact\\\" >\\n                        <mat-icon *ngIf=\\\"contact.status\\\" class=\\\"active-icon mat-green-600-bg s-16\\\" style=\\\"border-radius: 50%\\\">check</mat-icon>\\n                        <mat-icon *ngIf=\\\"!contact.status\\\" class=\\\"active-icon mat-red-500-bg s-16\\\" style=\\\"border-radius: 50%\\\">close</mat-icon>\\n                    </mat-cell>\\n                </ng-container>\\n\\n              <mat-header-row\\n                  *matHeaderRowDef=\\\"projectsData.teamMembers.table.columns\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let contact; columns: projectsData.teamMembers.table.columns;\\\">\\n              </mat-row>\\n          </mat-table>\\n      </div>\\n      <!-- / Front -->\\n\\n  </album-widget>\\n  <!-- / WIDGET 11 -->\\n\\n</div>\\n<!-- / WIDGET GROUP -->\\n\\n              </mat-tab>\\n          </mat-tab-group>\\n\\n      </div>\\n      <!-- / CONTENT -->\\n\\n  </div>\\n  <!-- / CENTER -->\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#dashboard-project > .sidebar {\\n  width: 280px;\\n  min-width: 280px;\\n  max-width: 280px; }\\n#dashboard-project > .center > .header {\\n  height: 160px;\\n  min-height: 160px;\\n  max-height: 160px;\\n  background: #595959;\\n  /* fallback for old browsers */\\n  /* Chrome 10-25, Safari 5.1-6 */\\n  background: linear-gradient(to right, #595959, #b67878);\\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\n  position: relative;\\n  color: #FFFFFF; }\\n#dashboard-project > .center > .header .selected-project {\\n    background: rgba(0, 0, 0, 0.12);\\n    color: #FFFFFF;\\n    padding: 8px 16px;\\n    height: 40px;\\n    line-height: 24px;\\n    font-size: 16px; }\\n#dashboard-project > .center > .header .project-selector {\\n    margin-left: 1px;\\n    border-radius: 0;\\n    background: rgba(0, 0, 0, 0.12); }\\n#dashboard-project > .center > .header .project-selector mat-icon {\\n      color: #FFFFFF; }\\n#dashboard-project > .center > .content {\\n  flex: 1; }\\n#dashboard-project > .center > .content mat-tab-group {\\n    height: 100%; }\\n#dashboard-project > .center > .content mat-tab-group .mat-tab-body-wrapper {\\n      flex-grow: 1; }\\n#dashboard-project > .center > .content .mat-tab-label-container {\\n    padding: 0 24px; }\\n#dashboard-project .widget.widget5 .gridline-path.gridline-path-horizontal {\\n  display: none; }\\n#dashboard-project .summary-header {\\n  padding: 24px;\\n  height: 600px;\\n  min-height: 600px;\\n  background: #00f260;\\n  background: linear-gradient(to right, #00f260, #0575e6); }\\n@media (max-width: 599px) {\\n    #dashboard-project .summary-header {\\n      height: 550px;\\n      min-height: 400px; } }\\n#dashboard-project .summary-header .hero-text {\\n    margin: 80px 24px; }\\n@media (max-width: 599px) {\\n      #dashboard-project .summary-header .hero-text {\\n        margin: 32px 24px; } }\\n#dashboard-project .summary-header .hero-text .h1 {\\n      color: white;\\n      font-size: 48px;\\n      font-weight: 400;\\n      letter-spacing: 0.01em;\\n      text-align: center; }\\n@media (max-width: 599px) {\\n        #dashboard-project .summary-header .hero-text .h1 {\\n          font-size: 32px; } }\\n#dashboard-project .summary-header .hero-text .h3 {\\n      color: rgba(255, 255, 255, 0.75);\\n      max-width: 480px;\\n      text-align: center;\\n      margin-top: 16px;\\n      font-weight: 300;\\n      letter-spacing: 0.05em; }\\n@media (max-width: 599px) {\\n        #dashboard-project .summary-header .hero-text .h3 {\\n          font-size: 14px; } }\\n#dashboard-project .price-tables {\\n  flex: 1 0 auto;\\n  margin-top: -192px; }\\n@media (max-width: 599px) {\\n    #dashboard-project .price-tables {\\n      margin-top: -128px; } }\\n#dashboard-project .price-tables .price-table {\\n    margin: 12px; }\\n#dashboard-project .faq {\\n  flex: 1 0 auto;\\n  margin: 96px auto;\\n  max-width: 840px; }\\n#dashboard-project .faq .title {\\n    font-size: 32px;\\n    font-weight: 300;\\n    text-align: center;\\n    margin-bottom: 64px;\\n    padding: 0 16px; }\\n#dashboard-project .faq .item {\\n    padding: 24px; }\\n#dashboard-project .faq .item .question {\\n      font-size: 18px;\\n      margin-bottom: 8px; }\\n#dashboard-project .faq .item .answer {\\n      font-size: 16px;\\n      line-height: 1.5;\\n      color: rgba(0, 0, 0, 0.54); }\\n#dashboard-project .product-image {\\n  overflow: hidden;\\n  width: 250px;\\n  height: 128px;\\n  margin-right: 16px;\\n  margin-bottom: 16px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n#dashboard-project .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { AlbumSidebarService } from '../../../../@album/components/sidebar/sidebar.service';\nimport { ProjectsDashboardService } from './projects.service';\n\nimport { albumAnimations } from '../../../../@album/animations';\nimport { MyService } from '../../../fake-db/shared-db.service';\nimport { copyStyles } from '@angular/animations/browser/src/util';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations   : albumAnimations,\n})\nexport class ProjectsComponent implements OnInit {\n    listOfProjects: any[];\n    selectedProject: any;\n    teamMembers: any = {};\n    projectsData: any;\n    widget6: any = {};\n    dateNow = Date.now();\nprojectSelectOnDashboard: any;\n    /**\n     * Constructor\n     *\n     * @param {AlbumSidebarService} _albumSidebarService\n     * @param {ProjectDashboardService} _projectDashboardService\n     * @param {MyService} myService\n     */\n    constructor(\n        private _albumSidebarService: AlbumSidebarService,\n        private _projectDashboardService: ProjectsDashboardService,\n        private _myService: MyService,\n\n    ) {\n    }\n\n      // -----------------------------------------------------------------------------------------------------\n    // @ Load widgets\n    // -----------------------------------------------------------------------------------------------------\n    public loadwidget() {\n        this.widget6 = {\n            currentProject : this.projectsData.widget6.currentProject,\n            legend       : false,\n            explodeSlices: false,\n            labels       : true,\n            doughnut     : true,\n            gradient     : false,\n            scheme       : {\n                domain: ['#f44336', '#9c27b0', '#03a9f4', '#e91e63', '#D48D34' , '#4D4E62', '#8E9ADA'],\n            },\n            onSelect     : (ev) => {\n            }\n        };\n        this.teamMembers.onContactsChanged = new BehaviorSubject({});\n        this.teamMembers.onContactsChanged.next(this.projectsData.teamMembers.table.rows);\n        this.teamMembers.dataSource = new FilesDataSource(this.teamMembers);\n}\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        this.listOfProjects = this._projectDashboardService.listOfProjects;\n        this.projectSelectOnDashboard = this._myService.id;\n        if (!!this.projectSelectOnDashboard && this.projectSelectOnDashboard !== null) {\n            const project = this._projectDashboardService.listOfProjects.filter(fi => fi.id === this.projectSelectOnDashboard);\n            this.selectedProject = project[0];\n        } else {\n            this.selectedProject = this.listOfProjects[0];\n        }\n        this.selectedProjectFromList(this.selectedProject);\n        this._myService.id = undefined;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n\n     projectDataBasedOnSelection(project) {\n        this.selectedProject = project;\n        const filteredProject = this._projectDashboardService.projectsData.projects.filter(fi => fi.projectId === project.id);\n        this.projectsData = filteredProject[0];\n        console.log(this.projectSelectOnDashboard, '--test');\n        // this._myService.clearMessage();\n        this.loadwidget();\n     }\n\n    selectedProjectFromList(project): void {\n       this.projectDataBasedOnSelection(project);\n    }\n\n    refranceSelected(url) {\n        window.open(url, '_blank');\n    }\n}\n\nexport class FilesDataSource extends DataSource<any> {\n    constructor(private _widget11) {\n        super();\n    }\n    connect(): Observable<any[]> {\n        return this._widget11.onContactsChanged;\n    }\n    disconnect(): void {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule, MatDividerModule, MatFormFieldModule, MatIconModule, MatMenuModule, MatSelectModule,\n  MatTableModule, MatTabsModule } from '@angular/material';\nimport { ProjectsDashboardService } from './projects.service';\nimport { ProjectsComponent } from './projects.component';\nimport { NgxChartsModule } from '../../../../../node_modules/@swimlane/ngx-charts';\nimport { AlbumSharedModule } from '../../../../@album/shared.module';\nimport { AlbumSidebarModule, AlbumWidgetModule } from '../../../../@album/components';\n\nconst routes: Routes = [\n    {\n        path     : '**',\n        component: ProjectsComponent,\n        resolve  : {\n            data: ProjectsDashboardService\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        ProjectsComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatMenuModule,\n        MatSelectModule,\n        MatTableModule,\n        MatTabsModule,\n\n        NgxChartsModule,\n\n        AlbumSharedModule,\n        AlbumSidebarModule,\n        AlbumWidgetModule\n    ],\n    providers   : [\n        ProjectsDashboardService\n    ]\n})\nexport class ProjectsDashboardModule { }\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ProjectsDashboardService implements Resolve<any> {\n    listOfProjects: any[];\n    projectsData: any;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getListOfProjects(),\n                this.geProjectsData()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get projects\n     *\n     * @returns {Promise<any>}\n     */\n    getListOfProjects(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/projects-dashboard-listofProjects')\n                .subscribe((response: any) => {\n                    this.listOfProjects = response;\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get widgets\n     *\n     * @returns {Promise<any>}\n     */\n    geProjectsData(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/projects-dashboard-data')\n                .subscribe((response: any) => {\n                    this.projectsData = response;\n                    resolve(response);\n                }, reject);\n        });\n    }\n}\n"],"sourceRoot":""}